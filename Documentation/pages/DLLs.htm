<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><!-- InstanceBegin template="/Templates/template.dwt" codeOutsideHTMLIsLocked="false" -->
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<!-- InstanceBeginEditable name="doctitle" -->
      <title>DLLs</title>
    <!-- InstanceEndEditable -->
<!-- InstanceBeginEditable name="head" --><!-- InstanceEndEditable -->
    <link href="help.css" rel="stylesheet" type="text/css" />
  </head>

  <body>
    <div id="page">
      <a class="anchor" name="top"></a>
      <div id="banner">
        <h1>P.I. Engineering SDK Documentation</h1>
      </div><!-- end of "banner" -->
      <div id="main">
<!-- InstanceBeginEditable name="MainContent" -->
        
    <h2><a name="idh_intro" id="idh_intro"></a>DLL versions | <a href="../index.htm">Main 
      Page</a></h2>
    <p>P.I. Engineering SDK v1.0.6.7 releases the managed .NET Standard 2.0 implementation 
      of our &quot;PIEHid&quot; dll, named PIEHidNetCore.dll. PIEHidNetCore.dll 
      supports a wide range of .NET platforms including .NET Framework 4.6.1 to 
      4.8, .NET Core &gt;=2.0, and .NET 5 and beyond with both 32 and 64 bit support 
      provided in a single version. All X-keys products can be used with any of 
      these dlls, they are not product specific. Updating of the dll is not required 
      for new products but allows for use of previously unavailable features. 
      Samples are not provided for every dll on every product. Users of PIEHidNetCore.dll, 
      PIEHid64Net.dll, or PIEHid64.dll can find samples in the XK-24 folder. Use 
      of the &quot;PIEHid&quot; dlls are identical for all products.</p>
    <p>Table of dlls</p>
    <table width="98%" border="1">
      <tr> 
        <td><b>Name</b></td>
        <td><b>Version</b></td>
        <td><b>Date</b></td>
        <td><b>Target Framework</b></td>
        <td><b>SDK Sample(s)</b></td>
      </tr>
      <tr> 
        <td> 
          <div align="left">PIEHidNetCore.dll </div>
        </td>
        <td> 
          <div align="left">v1.0.0.1 </div>
        </td>
        <td> 
          <div align="left">Jul 2, 2021</div>
        </td>
        <td> 
          <div align="left">netstandard2.0</div>
        </td>
        <td> 
          <div align="left">..\PI Engineering SDK\XK-24\C# .NET Standard 2.0</div>
        </td>
      </tr>
      <tr> 
        <td> 
          <div align="left">PIEHid64.dll</div>
        </td>
        <td> 
          <div align="left">v2.0.0.0</div>
        </td>
        <td> 
          <div align="left">Mar 28, 2016 </div>
        </td>
        <td> 
          <div align="left">unmanaged</div>
        </td>
        <td> 
          <div align="left">..\PI Engineering SDK\XK-24\C++ x64</div>
        </td>
      </tr>
      <tr> 
        <td> 
          <div align="left">PIEHid64Net.dll</div>
        </td>
        <td> 
          <div align="left">v2.1.0.0</div>
        </td>
        <td> 
          <div align="left">Apr 21, 2015</div>
        </td>
        <td> 
          <div align="left">.NET Framework 4</div>
        </td>
        <td> 
          <div align="left">..\PI Engineering SDK\XK-24\C# x64</div>
        </td>
      </tr>
      <tr> 
        <td> 
          <div align="left">PIEHid32.dll</div>
        </td>
        <td> 
          <div align="left">v2.0.0.0</div>
        </td>
        <td> 
          <div align="left">May 12, 2011</div>
        </td>
        <td> 
          <div align="left">unmanaged</div>
        </td>
        <td> 
          <div align="left">..\PI Engineering SDK\<i>product</i>\C++</div>
        </td>
      </tr>
      <tr> 
        <td> 
          <div align="left">PIEHid32Net.dll</div>
        </td>
        <td> 
          <div align="left">v2.0.0.0</div>
        </td>
        <td> 
          <div align="left">Apr 15, 2011</div>
        </td>
        <td> 
          <div align="left">.NET Framework 2.0</div>
        </td>
        <td> 
          <div align="left">..\PI Engineering SDK\<i>product</i>\C#, ..\PI Engineering 
            SDK\<i>product</i>\VB, and ..\PI Engineering SDK\.Net Components</div>
        </td>
      </tr>
      <tr> 
        <td> 
          <div align="left">PIEHidDotNet.dll</div>
        </td>
        <td> 
          <div align="left">v1.0.0.4</div>
        </td>
        <td> 
          <div align="left">Jan 11, 2010</div>
        </td>
        <td> 
          <div align="left">.NET Framework 2.0</div>
        </td>
        <td> 
          <div align="left">Legacy only <a href="https://xkeys.com/software/legacysdk.html">https://xkeys.com/software/legacysdk.html</a></div>
        </td>
      </tr>
      <tr> 
        <td> 
          <div align="left">PIEHidDotNet_s.dll</div>
        </td>
        <td> 
          <div align="left">v1.0.0.4</div>
        </td>
        <td> 
          <div align="left">Jan 11, 2010</div>
        </td>
        <td> 
          <div align="left">.NET Framework 2.0</div>
        </td>
        <td> 
          <div align="left">Legacy only <a href="https://xkeys.com/software/legacysdk.html">https://xkeys.com/software/legacysdk.html</a></div>
        </td>
      </tr>
      <tr> 
        <td> 
          <div align="left">PIEHid.dll</div>
        </td>
        <td> 
          <div align="left">v1.5.2.2</div>
        </td>
        <td> 
          <div align="left">Sep 10, 2009</div>
        </td>
        <td> 
          <div align="left">unmanaged</div>
        </td>
        <td> 
          <div align="left">Legacy only <a href="https://xkeys.com/software/legacysdk.html">https://xkeys.com/software/legacysdk.html</a></div>
        </td>
      </tr>
    </table>
    <p><br>
    </p>
    <h3>Strong and Weak-Named DLL Files</h3>
        
    <p><em>PIEHidDotNet_s.dll</em> is a strong-named component.  <em>PIEHidDotNet.dll</em> 
      is a weak-named component.  Other than that they are code-wise identical.  
      All references to <em>PIEHidDotNet_s.dll</em> in this documentation can 
      be used interchangeably with <em>PIEHidDotNet.dll</em>. The following explanation 
      is from a Microsoft <a href="http://msdn.microsoft.com/en-us/library/h4fa028b(VS.80).aspx" title="http://msdn.microsoft.com/en-us/library/h4fa028b(VS.80).aspx">article</a>: 
    </p>
        <blockquote>
          <p>A  strong-named component cannot be serviced or upgraded just by copying a new  version over the old one.  You can update  a weak-named DLL in an application directory simply by copying a new version  into the application directory; the common language runtime (CLR) will load  whatever version is physically present.   With strong-named DLLs, you must either recompile the entire application so that all assembly  references point to the new version, or you must update the application's  .config file to instruct the runtime to load the new version instead of the old  one.  Although  strong-named components require a little more maintenance, the benefit is that  applications can be very explicit about which versions of other components they  require at run time.</p>
        </blockquote>
        
    <p>If it is desired to use the strong-named <em>PIEHidDotNet_s.dll</em> for 
      your application, the provided samples can be easily converted following 
      the instructions below.</p>
        <blockquote>
          <h3>C# Express</h3>
          
      <ol>
        <li>Open your solution.</li>
        <li>Copy PIEHidDotNet_s.dll to the project solution directories where 
          the current PIEHidDotNet.dll resides, don't forget the .../bin/Debug 
          and Release folders.</li>
        <li>Remove the current DLL reference... 
          <ol>
            <li>In the Solution Explorer, expand References and select PIEHidDotNet.</li>
            <li>Right click PIEHidDotNet and select Remove.</li>
          </ol>
        </li>
        <li>Add a new DLL reference... 
          <ol>
            <li>Right click on References and select Add Reference.</li>
            <li>Select the Browse tab and the select PIEHidDotNet_s.dll.</li>
          </ol>
        </li>
        <li>Rebuild your project.</li>
      </ol>
          <h3>VB Express</h3>
          
      <ol>
        <li>Open your solution.</li>
        <li>Copy PIEHidDotNet_s.dll to the project solution directories where 
          the current PIEHidDotNet.dll resides, don't forget the .../bin/Debug 
          and Release folders.</li>
        <li>Remove the current DLL reference... 
          <ol>
            <li>Select Project &gt; PIEHidDotNet Sample Properties.</li>
            <li>Select References on the left, then select PIEHidDotNet.</li>
            <li>Click the Remove button below.</li>
          </ol>
        </li>
        <li>Add a new DLL reference... 
          <ol>
            <li>Click the Add button.</li>
            <li>Select the Browse tab and the select PIEHidDotNet_s.dll.</li>
          </ol>
        </li>
        <li>Rebuild your project.</li>
      </ol>
          
        </blockquote>
        
    <p>The above instructions are for converting a solution from <em>PIEHidDotNet.dll 
      </em>to <em>PIEHidDotNet_s.dll</em> but can be used equally for going from 
      <em>PIEHidDotNet_s.dll</em> to <em>PIEHidDotNet.dll</em> by swapping dll 
      names.</p>
    <h3>Note on our DLLs</h3>
        
    <p>You can find <em>PIEHidNetCore.dll, PIEHid32Net.dll</em>, <em>PIEHid64Net.dll</em><em>, 
      <i>PIEHid</i></em><i>32.dll,</i> <em>PIEHid64.dll</em> and the older <em>PIEHidDotNet.dll</em>, 
      <em>PIEHidDotNet_s.dll</em>, and <i>PIEHid.dll</i> in the DLLs folder of 
      the P.I. Engineering SDK installation folder. <br />
      (e.g. C:\Program Files\PI Engineering\P.I. Engineering SDK\DLLs)</p>
    <h3>Note for 64 bit Users</h3>
    <p> PIEHid32Net.dll and PIEHidDotNet.dll are currently compiled with a target 
      platform of x86 thus in order for applications running on 64 bit systems 
      to utilize the dll properly they must also be compiled with a target platform 
      of x86. Users of C# Express and Visual Basic Express should set the target 
      platform to x86 by going to the Project Properties-&gt;Compile-&gt;Advanced 
      Compile Options and change Target CPU to x86. For users of the non-Professional 
      version this option is not available but it can still be changed via the 
      .csproj file. Open the solution's project file (.csproj or .vbproj), find 
      the &lt;PropertyGroup&gt; section and add this line <platformtarget>&lt;PlatformTarget&gt;x86&lt;/PlatformTarget&gt;, 
      save the file, compile project. PIEHid64Net.dll is a true 64 bit version.</platformtarget> 
      PIEHid64.dll is the unmanaged dll for 64 bit.<br />
    </p>
    <!-- InstanceEndEditable -->
        <a class="backtotop" href="#top">Back to top</a>      </div>
      <!-- end of "main" -->
      <div id="footer">
        
    <p>&copy; Copyright 2021&emsp;|&emsp;<a href="http://www.piengineering.com" rel="external" target="_blank">P.I. 
      Engineering, Inc.</a>&emsp;|&emsp;Select Rights Reserved</p>
      </div>
      <!-- end of "footer" -->
    </div><!-- end of "page" -->
  </body>
<!-- InstanceEnd --></html>